// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: socket.proto

package socket

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RequestType int32

const (
	RequestType_ACK                           RequestType = 0
	RequestType_NACK                          RequestType = 1
	RequestType_NewTCPServerRequest           RequestType = 2
	RequestType_NewSerialServerRequest        RequestType = 3
	RequestType_NewSlaveRequest               RequestType = 4
	RequestType_RemoveSlaveRequest            RequestType = 5
	RequestType_AddCoilsRequest               RequestType = 6
	RequestType_DeleteCoilsRequest            RequestType = 7
	RequestType_AddDiscreteInputsRequest      RequestType = 8
	RequestType_DeleteDiscreteInputsRequest   RequestType = 9
	RequestType_AddHoldingRegistersRequest    RequestType = 10
	RequestType_DeleteHoldingRegistersRequest RequestType = 11
	RequestType_AddInputRegistersRequest      RequestType = 12
	RequestType_DeleteInputRegistersRequest   RequestType = 13
	RequestType_StartServerRequest            RequestType = 14
	RequestType_StopServerRequest             RequestType = 15
	RequestType_NewTCPClientRequest           RequestType = 16
	RequestType_NewSerialClientRequest        RequestType = 17
	RequestType_ReadCoilsRequest              RequestType = 18
	RequestType_ReadDiscreteInputsRequest     RequestType = 19
	RequestType_ReadHoldingRegistersRequest   RequestType = 20
	RequestType_ReadInputRegistersRequest     RequestType = 21
	RequestType_WriteCoilRequest              RequestType = 22
	RequestType_WriteCoilsRequest             RequestType = 23
	RequestType_WriteRegisterRequest          RequestType = 24
	RequestType_WriteRegistersRequest         RequestType = 25
	RequestType_ConnectRequest                RequestType = 26
	RequestType_DisconnectRequest             RequestType = 27
)

// Enum value maps for RequestType.
var (
	RequestType_name = map[int32]string{
		0:  "ACK",
		1:  "NACK",
		2:  "NewTCPServerRequest",
		3:  "NewSerialServerRequest",
		4:  "NewSlaveRequest",
		5:  "RemoveSlaveRequest",
		6:  "AddCoilsRequest",
		7:  "DeleteCoilsRequest",
		8:  "AddDiscreteInputsRequest",
		9:  "DeleteDiscreteInputsRequest",
		10: "AddHoldingRegistersRequest",
		11: "DeleteHoldingRegistersRequest",
		12: "AddInputRegistersRequest",
		13: "DeleteInputRegistersRequest",
		14: "StartServerRequest",
		15: "StopServerRequest",
		16: "NewTCPClientRequest",
		17: "NewSerialClientRequest",
		18: "ReadCoilsRequest",
		19: "ReadDiscreteInputsRequest",
		20: "ReadHoldingRegistersRequest",
		21: "ReadInputRegistersRequest",
		22: "WriteCoilRequest",
		23: "WriteCoilsRequest",
		24: "WriteRegisterRequest",
		25: "WriteRegistersRequest",
		26: "ConnectRequest",
		27: "DisconnectRequest",
	}
	RequestType_value = map[string]int32{
		"ACK":                           0,
		"NACK":                          1,
		"NewTCPServerRequest":           2,
		"NewSerialServerRequest":        3,
		"NewSlaveRequest":               4,
		"RemoveSlaveRequest":            5,
		"AddCoilsRequest":               6,
		"DeleteCoilsRequest":            7,
		"AddDiscreteInputsRequest":      8,
		"DeleteDiscreteInputsRequest":   9,
		"AddHoldingRegistersRequest":    10,
		"DeleteHoldingRegistersRequest": 11,
		"AddInputRegistersRequest":      12,
		"DeleteInputRegistersRequest":   13,
		"StartServerRequest":            14,
		"StopServerRequest":             15,
		"NewTCPClientRequest":           16,
		"NewSerialClientRequest":        17,
		"ReadCoilsRequest":              18,
		"ReadDiscreteInputsRequest":     19,
		"ReadHoldingRegistersRequest":   20,
		"ReadInputRegistersRequest":     21,
		"WriteCoilRequest":              22,
		"WriteCoilsRequest":             23,
		"WriteRegisterRequest":          24,
		"WriteRegistersRequest":         25,
		"ConnectRequest":                26,
		"DisconnectRequest":             27,
	}
)

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}

func (x RequestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestType) Descriptor() protoreflect.EnumDescriptor {
	return file_socket_proto_enumTypes[0].Descriptor()
}

func (RequestType) Type() protoreflect.EnumType {
	return &file_socket_proto_enumTypes[0]
}

func (x RequestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RequestType.Descriptor instead.
func (RequestType) EnumDescriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{0}
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   RequestType `protobuf:"varint,1,opt,name=type,proto3,enum=socket.RequestType" json:"type,omitempty"`
	Length uint64      `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetType() RequestType {
	if x != nil {
		return x.Type
	}
	return RequestType_ACK
}

func (x *Header) GetLength() uint64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type TCPServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port      int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	UseTls    bool   `protobuf:"varint,3,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	ByteOrder string `protobuf:"bytes,4,opt,name=byte_order,json=byteOrder,proto3" json:"byte_order,omitempty"`
	WordOrder string `protobuf:"bytes,5,opt,name=word_order,json=wordOrder,proto3" json:"word_order,omitempty"`
	CertFile  string `protobuf:"bytes,6,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	KeyFile   string `protobuf:"bytes,7,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	CaFile    string `protobuf:"bytes,8,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`
}

func (x *TCPServerRequest) Reset() {
	*x = TCPServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPServerRequest) ProtoMessage() {}

func (x *TCPServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPServerRequest.ProtoReflect.Descriptor instead.
func (*TCPServerRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{1}
}

func (x *TCPServerRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TCPServerRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TCPServerRequest) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *TCPServerRequest) GetByteOrder() string {
	if x != nil {
		return x.ByteOrder
	}
	return ""
}

func (x *TCPServerRequest) GetWordOrder() string {
	if x != nil {
		return x.WordOrder
	}
	return ""
}

func (x *TCPServerRequest) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *TCPServerRequest) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *TCPServerRequest) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

type SerialServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port      string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Baudrate  int32  `protobuf:"varint,2,opt,name=baudrate,proto3" json:"baudrate,omitempty"`
	Databits  uint32 `protobuf:"varint,3,opt,name=databits,proto3" json:"databits,omitempty"`
	Parity    uint32 `protobuf:"varint,4,opt,name=parity,proto3" json:"parity,omitempty"`
	Stopbits  uint32 `protobuf:"varint,5,opt,name=stopbits,proto3" json:"stopbits,omitempty"`
	ByteOrder string `protobuf:"bytes,6,opt,name=byte_order,json=byteOrder,proto3" json:"byte_order,omitempty"`
	WordOrder string `protobuf:"bytes,7,opt,name=word_order,json=wordOrder,proto3" json:"word_order,omitempty"`
}

func (x *SerialServerRequest) Reset() {
	*x = SerialServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerialServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialServerRequest) ProtoMessage() {}

func (x *SerialServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerialServerRequest.ProtoReflect.Descriptor instead.
func (*SerialServerRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{2}
}

func (x *SerialServerRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SerialServerRequest) GetBaudrate() int32 {
	if x != nil {
		return x.Baudrate
	}
	return 0
}

func (x *SerialServerRequest) GetDatabits() uint32 {
	if x != nil {
		return x.Databits
	}
	return 0
}

func (x *SerialServerRequest) GetParity() uint32 {
	if x != nil {
		return x.Parity
	}
	return 0
}

func (x *SerialServerRequest) GetStopbits() uint32 {
	if x != nil {
		return x.Stopbits
	}
	return 0
}

func (x *SerialServerRequest) GetByteOrder() string {
	if x != nil {
		return x.ByteOrder
	}
	return ""
}

func (x *SerialServerRequest) GetWordOrder() string {
	if x != nil {
		return x.WordOrder
	}
	return ""
}

type SlaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitId uint32 `protobuf:"varint,1,opt,name=unit_id,json=unitId,proto3" json:"unit_id,omitempty"`
}

func (x *SlaveRequest) Reset() {
	*x = SlaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlaveRequest) ProtoMessage() {}

func (x *SlaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlaveRequest.ProtoReflect.Descriptor instead.
func (*SlaveRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{3}
}

func (x *SlaveRequest) GetUnitId() uint32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Addresses    []uint32      `protobuf:"varint,2,rep,packed,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteRequest) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *DeleteRequest) GetAddresses() []uint32 {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type CoilsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values       []bool        `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *CoilsRequest) Reset() {
	*x = CoilsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoilsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoilsRequest) ProtoMessage() {}

func (x *CoilsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoilsRequest.ProtoReflect.Descriptor instead.
func (*CoilsRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{5}
}

func (x *CoilsRequest) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *CoilsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *CoilsRequest) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type DiscreteInputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values       []bool        `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *DiscreteInputsRequest) Reset() {
	*x = DiscreteInputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscreteInputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscreteInputsRequest) ProtoMessage() {}

func (x *DiscreteInputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscreteInputsRequest.ProtoReflect.Descriptor instead.
func (*DiscreteInputsRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{6}
}

func (x *DiscreteInputsRequest) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *DiscreteInputsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *DiscreteInputsRequest) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type DiscreteInputsRequestDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Addresses    []uint32      `protobuf:"varint,2,rep,packed,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DiscreteInputsRequestDelete) Reset() {
	*x = DiscreteInputsRequestDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscreteInputsRequestDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscreteInputsRequestDelete) ProtoMessage() {}

func (x *DiscreteInputsRequestDelete) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscreteInputsRequestDelete.ProtoReflect.Descriptor instead.
func (*DiscreteInputsRequestDelete) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{7}
}

func (x *DiscreteInputsRequestDelete) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *DiscreteInputsRequestDelete) GetAddresses() []uint32 {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type HoldingRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values       [][]byte      `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *HoldingRegistersRequest) Reset() {
	*x = HoldingRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HoldingRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HoldingRegistersRequest) ProtoMessage() {}

func (x *HoldingRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HoldingRegistersRequest.ProtoReflect.Descriptor instead.
func (*HoldingRegistersRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{8}
}

func (x *HoldingRegistersRequest) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *HoldingRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *HoldingRegistersRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type InputRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values       [][]byte      `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *InputRegistersRequest) Reset() {
	*x = InputRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputRegistersRequest) ProtoMessage() {}

func (x *InputRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputRegistersRequest.ProtoReflect.Descriptor instead.
func (*InputRegistersRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{9}
}

func (x *InputRegistersRequest) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *InputRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *InputRegistersRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type TCPClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port      int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	UseTls    bool   `protobuf:"varint,3,opt,name=use_tls,json=useTls,proto3" json:"use_tls,omitempty"`
	ByteOrder string `protobuf:"bytes,4,opt,name=byte_order,json=byteOrder,proto3" json:"byte_order,omitempty"`
	WordOrder string `protobuf:"bytes,5,opt,name=word_order,json=wordOrder,proto3" json:"word_order,omitempty"`
	CertFile  string `protobuf:"bytes,6,opt,name=cert_file,json=certFile,proto3" json:"cert_file,omitempty"`
	KeyFile   string `protobuf:"bytes,7,opt,name=key_file,json=keyFile,proto3" json:"key_file,omitempty"`
	CaFile    string `protobuf:"bytes,8,opt,name=ca_file,json=caFile,proto3" json:"ca_file,omitempty"`
}

func (x *TCPClientRequest) Reset() {
	*x = TCPClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCPClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPClientRequest) ProtoMessage() {}

func (x *TCPClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPClientRequest.ProtoReflect.Descriptor instead.
func (*TCPClientRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{10}
}

func (x *TCPClientRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *TCPClientRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *TCPClientRequest) GetUseTls() bool {
	if x != nil {
		return x.UseTls
	}
	return false
}

func (x *TCPClientRequest) GetByteOrder() string {
	if x != nil {
		return x.ByteOrder
	}
	return ""
}

func (x *TCPClientRequest) GetWordOrder() string {
	if x != nil {
		return x.WordOrder
	}
	return ""
}

func (x *TCPClientRequest) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *TCPClientRequest) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *TCPClientRequest) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

type SerialClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port      string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	Baudrate  int32  `protobuf:"varint,2,opt,name=baudrate,proto3" json:"baudrate,omitempty"`
	Databits  uint32 `protobuf:"varint,3,opt,name=databits,proto3" json:"databits,omitempty"`
	Parity    uint32 `protobuf:"varint,4,opt,name=parity,proto3" json:"parity,omitempty"`
	Stopbits  uint32 `protobuf:"varint,5,opt,name=stopbits,proto3" json:"stopbits,omitempty"`
	ByteOrder string `protobuf:"bytes,6,opt,name=byte_order,json=byteOrder,proto3" json:"byte_order,omitempty"`
	WordOrder string `protobuf:"bytes,7,opt,name=word_order,json=wordOrder,proto3" json:"word_order,omitempty"`
}

func (x *SerialClientRequest) Reset() {
	*x = SerialClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerialClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerialClientRequest) ProtoMessage() {}

func (x *SerialClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerialClientRequest.ProtoReflect.Descriptor instead.
func (*SerialClientRequest) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{11}
}

func (x *SerialClientRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SerialClientRequest) GetBaudrate() int32 {
	if x != nil {
		return x.Baudrate
	}
	return 0
}

func (x *SerialClientRequest) GetDatabits() uint32 {
	if x != nil {
		return x.Databits
	}
	return 0
}

func (x *SerialClientRequest) GetParity() uint32 {
	if x != nil {
		return x.Parity
	}
	return 0
}

func (x *SerialClientRequest) GetStopbits() uint32 {
	if x != nil {
		return x.Stopbits
	}
	return 0
}

func (x *SerialClientRequest) GetByteOrder() string {
	if x != nil {
		return x.ByteOrder
	}
	return ""
}

func (x *SerialClientRequest) GetWordOrder() string {
	if x != nil {
		return x.WordOrder
	}
	return ""
}

type ReadCoils struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Count        uint32        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReadCoils) Reset() {
	*x = ReadCoils{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCoils) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoils) ProtoMessage() {}

func (x *ReadCoils) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoils.ProtoReflect.Descriptor instead.
func (*ReadCoils) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{12}
}

func (x *ReadCoils) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *ReadCoils) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadCoils) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReadCoilsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []bool `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ReadCoilsResponse) Reset() {
	*x = ReadCoilsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCoilsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsResponse) ProtoMessage() {}

func (x *ReadCoilsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsResponse.ProtoReflect.Descriptor instead.
func (*ReadCoilsResponse) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{13}
}

func (x *ReadCoilsResponse) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReadDiscreteInputs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Count        uint32        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReadDiscreteInputs) Reset() {
	*x = ReadDiscreteInputs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDiscreteInputs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputs) ProtoMessage() {}

func (x *ReadDiscreteInputs) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputs.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputs) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{14}
}

func (x *ReadDiscreteInputs) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *ReadDiscreteInputs) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadDiscreteInputs) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReadDiscreteInputsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values []bool `protobuf:"varint,1,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *ReadDiscreteInputsResponse) Reset() {
	*x = ReadDiscreteInputsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDiscreteInputsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsResponse) ProtoMessage() {}

func (x *ReadDiscreteInputsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsResponse.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsResponse) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{15}
}

func (x *ReadDiscreteInputsResponse) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReadHoldingRegisters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Count        uint32        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReadHoldingRegisters) Reset() {
	*x = ReadHoldingRegisters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHoldingRegisters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegisters) ProtoMessage() {}

func (x *ReadHoldingRegisters) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegisters.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegisters) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{16}
}

func (x *ReadHoldingRegisters) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *ReadHoldingRegisters) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadHoldingRegisters) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReadHoldingRegistersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ReadHoldingRegistersResponse) Reset() {
	*x = ReadHoldingRegistersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHoldingRegistersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersResponse) ProtoMessage() {}

func (x *ReadHoldingRegistersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersResponse.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersResponse) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{17}
}

func (x *ReadHoldingRegistersResponse) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type ReadInputRegisters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Count        uint32        `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ReadInputRegisters) Reset() {
	*x = ReadInputRegisters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInputRegisters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegisters) ProtoMessage() {}

func (x *ReadInputRegisters) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegisters.ProtoReflect.Descriptor instead.
func (*ReadInputRegisters) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{18}
}

func (x *ReadInputRegisters) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *ReadInputRegisters) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadInputRegisters) GetCount() uint32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReadInputRegistersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Values [][]byte `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ReadInputRegistersResponse) Reset() {
	*x = ReadInputRegistersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInputRegistersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersResponse) ProtoMessage() {}

func (x *ReadInputRegistersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersResponse.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersResponse) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{19}
}

func (x *ReadInputRegistersResponse) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteCoil struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Value        bool          `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteCoil) Reset() {
	*x = WriteCoil{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteCoil) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteCoil) ProtoMessage() {}

func (x *WriteCoil) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteCoil.ProtoReflect.Descriptor instead.
func (*WriteCoil) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{20}
}

func (x *WriteCoil) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *WriteCoil) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteCoil) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

type WriteCoils struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values       []bool        `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *WriteCoils) Reset() {
	*x = WriteCoils{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteCoils) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteCoils) ProtoMessage() {}

func (x *WriteCoils) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteCoils.ProtoReflect.Descriptor instead.
func (*WriteCoils) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{21}
}

func (x *WriteCoils) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *WriteCoils) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteCoils) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

type WriteRegister struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Value        []byte        `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteRegister) Reset() {
	*x = WriteRegister{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRegister) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRegister) ProtoMessage() {}

func (x *WriteRegister) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRegister.ProtoReflect.Descriptor instead.
func (*WriteRegister) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{22}
}

func (x *WriteRegister) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *WriteRegister) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteRegister) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type WriteRegisters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlaveRequest *SlaveRequest `protobuf:"bytes,1,opt,name=slave_request,json=slaveRequest,proto3" json:"slave_request,omitempty"`
	Address      uint32        `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values       [][]byte      `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *WriteRegisters) Reset() {
	*x = WriteRegisters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_socket_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRegisters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRegisters) ProtoMessage() {}

func (x *WriteRegisters) ProtoReflect() protoreflect.Message {
	mi := &file_socket_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRegisters.ProtoReflect.Descriptor instead.
func (*WriteRegisters) Descriptor() ([]byte, []int) {
	return file_socket_proto_rawDescGZIP(), []int{23}
}

func (x *WriteRegisters) GetSlaveRequest() *SlaveRequest {
	if x != nil {
		return x.SlaveRequest
	}
	return nil
}

func (x *WriteRegisters) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteRegisters) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_socket_proto protoreflect.FileDescriptor

var file_socket_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x49, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0xe2, 0x01, 0x0a, 0x10, 0x54, 0x43, 0x50, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x54, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x79, 0x74,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x22, 0xd3, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x62, 0x69, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x62, 0x69, 0x74, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x27, 0x0a, 0x0c,
	0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22,
	0x7b, 0x0a, 0x0c, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e,
	0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c,
	0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a,
	0x15, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x1b, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x17,
	0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xe2, 0x01, 0x0a, 0x10,
	0x54, 0x43, 0x50, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f,
	0x74, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x6c,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x46, 0x69, 0x6c, 0x65,
	0x22, 0xd3, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x62, 0x61, 0x75, 0x64, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x6f, 0x70, 0x62, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x74, 0x6f, 0x70, 0x62, 0x69, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x79,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x76, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x69, 0x6c, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2b,
	0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x12, 0x52,
	0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c,
	0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x1a,
	0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x36, 0x0a, 0x1c, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7f,
	0x0a, 0x12, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x34, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x69, 0x6c, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x79, 0x0a,
	0x0a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x0d, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x7d, 0x0a, 0x0e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x2a, 0xd6, 0x05, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x43, 0x4b, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x41, 0x43, 0x4b, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x54, 0x43, 0x50,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x02, 0x12,
	0x1a, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x4e,
	0x65, 0x77, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x04,
	0x12, 0x16, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x06, 0x12, 0x16, 0x0a,
	0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x07, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x10, 0x08, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73,
	0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x10, 0x0a, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x6f,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0b, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x0c, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x0d, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x0e, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x0f, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x54, 0x43, 0x50, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x10, 0x12, 0x1a,
	0x0a, 0x16, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x12,
	0x12, 0x1d, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x13, 0x12,
	0x1f, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x14,
	0x12, 0x1d, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x15, 0x12,
	0x14, 0x0a, 0x10, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x16, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x17, 0x12, 0x18, 0x0a, 0x14,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x18, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10,
	0x19, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x10, 0x1a, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x1b, 0x42, 0x0a, 0x5a, 0x08,
	0x2e, 0x2f, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_socket_proto_rawDescOnce sync.Once
	file_socket_proto_rawDescData = file_socket_proto_rawDesc
)

func file_socket_proto_rawDescGZIP() []byte {
	file_socket_proto_rawDescOnce.Do(func() {
		file_socket_proto_rawDescData = protoimpl.X.CompressGZIP(file_socket_proto_rawDescData)
	})
	return file_socket_proto_rawDescData
}

var file_socket_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_socket_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_socket_proto_goTypes = []any{
	(RequestType)(0),                     // 0: socket.RequestType
	(*Header)(nil),                       // 1: socket.Header
	(*TCPServerRequest)(nil),             // 2: socket.TCPServerRequest
	(*SerialServerRequest)(nil),          // 3: socket.SerialServerRequest
	(*SlaveRequest)(nil),                 // 4: socket.SlaveRequest
	(*DeleteRequest)(nil),                // 5: socket.DeleteRequest
	(*CoilsRequest)(nil),                 // 6: socket.CoilsRequest
	(*DiscreteInputsRequest)(nil),        // 7: socket.DiscreteInputsRequest
	(*DiscreteInputsRequestDelete)(nil),  // 8: socket.DiscreteInputsRequestDelete
	(*HoldingRegistersRequest)(nil),      // 9: socket.HoldingRegistersRequest
	(*InputRegistersRequest)(nil),        // 10: socket.InputRegistersRequest
	(*TCPClientRequest)(nil),             // 11: socket.TCPClientRequest
	(*SerialClientRequest)(nil),          // 12: socket.SerialClientRequest
	(*ReadCoils)(nil),                    // 13: socket.ReadCoils
	(*ReadCoilsResponse)(nil),            // 14: socket.ReadCoilsResponse
	(*ReadDiscreteInputs)(nil),           // 15: socket.ReadDiscreteInputs
	(*ReadDiscreteInputsResponse)(nil),   // 16: socket.ReadDiscreteInputsResponse
	(*ReadHoldingRegisters)(nil),         // 17: socket.ReadHoldingRegisters
	(*ReadHoldingRegistersResponse)(nil), // 18: socket.ReadHoldingRegistersResponse
	(*ReadInputRegisters)(nil),           // 19: socket.ReadInputRegisters
	(*ReadInputRegistersResponse)(nil),   // 20: socket.ReadInputRegistersResponse
	(*WriteCoil)(nil),                    // 21: socket.WriteCoil
	(*WriteCoils)(nil),                   // 22: socket.WriteCoils
	(*WriteRegister)(nil),                // 23: socket.WriteRegister
	(*WriteRegisters)(nil),               // 24: socket.WriteRegisters
}
var file_socket_proto_depIdxs = []int32{
	0,  // 0: socket.Header.type:type_name -> socket.RequestType
	4,  // 1: socket.DeleteRequest.slave_request:type_name -> socket.SlaveRequest
	4,  // 2: socket.CoilsRequest.slave_request:type_name -> socket.SlaveRequest
	4,  // 3: socket.DiscreteInputsRequest.slave_request:type_name -> socket.SlaveRequest
	4,  // 4: socket.DiscreteInputsRequestDelete.slave_request:type_name -> socket.SlaveRequest
	4,  // 5: socket.HoldingRegistersRequest.slave_request:type_name -> socket.SlaveRequest
	4,  // 6: socket.InputRegistersRequest.slave_request:type_name -> socket.SlaveRequest
	4,  // 7: socket.ReadCoils.slave_request:type_name -> socket.SlaveRequest
	4,  // 8: socket.ReadDiscreteInputs.slave_request:type_name -> socket.SlaveRequest
	4,  // 9: socket.ReadHoldingRegisters.slave_request:type_name -> socket.SlaveRequest
	4,  // 10: socket.ReadInputRegisters.slave_request:type_name -> socket.SlaveRequest
	4,  // 11: socket.WriteCoil.slave_request:type_name -> socket.SlaveRequest
	4,  // 12: socket.WriteCoils.slave_request:type_name -> socket.SlaveRequest
	4,  // 13: socket.WriteRegister.slave_request:type_name -> socket.SlaveRequest
	4,  // 14: socket.WriteRegisters.slave_request:type_name -> socket.SlaveRequest
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_socket_proto_init() }
func file_socket_proto_init() {
	if File_socket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_socket_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TCPServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SerialServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*SlaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*CoilsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DiscreteInputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*DiscreteInputsRequestDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HoldingRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*InputRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*TCPClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*SerialClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ReadCoils); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ReadCoilsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReadDiscreteInputs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReadDiscreteInputsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ReadHoldingRegisters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ReadHoldingRegistersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ReadInputRegisters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ReadInputRegistersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*WriteCoil); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*WriteCoils); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*WriteRegister); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_socket_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*WriteRegisters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_socket_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_socket_proto_goTypes,
		DependencyIndexes: file_socket_proto_depIdxs,
		EnumInfos:         file_socket_proto_enumTypes,
		MessageInfos:      file_socket_proto_msgTypes,
	}.Build()
	File_socket_proto = out.File
	file_socket_proto_rawDesc = nil
	file_socket_proto_goTypes = nil
	file_socket_proto_depIdxs = nil
}
