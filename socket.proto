syntax = "proto3";

package socket;

option go_package = "./socket";

enum RequestType {
    ACK = 0;
    NACK = 1;

    SetTCPServer = 2;
    SetSerialServer = 3;
    AddSlave = 4;
    RemoveSlave = 5;
    StartServer = 6;
    StopServer = 7;

    SetTCPClient = 8;
    SetSerialClient = 9;
    Connect = 10;
    Disconnect = 11;

    AddRelay = 12;
    SetRelay = 13;
    DeleteRelay = 14;
    ReadRelay = 15;
    WriteRelay = 16;

    AddRegister = 17;
    SetRegister = 18;
    DeleteRegister = 19;
    ReadRegister = 20;
    WriteRegister = 21;
}

message Header {
    RequestType type = 1;
    uint64 length = 2;
    string error = 3;
}

message TCPServerRequest {
    string host = 1;
    int32 port = 2;
    bool use_tls = 3;
    string cert_file = 4;
    string key_file = 5;
    string ca_file = 6;
}

message SerialServerRequest {
    string port = 1;
    int32 baudrate = 2;
    uint32 databits = 3;
    uint32 parity = 4;
    uint32 stopbits = 5;
}

message TCPClientRequest {
    string host = 1;
    int32 port = 2;
    bool use_tls = 3;
    string cert_file = 6;
    string key_file = 7;
    string ca_file = 8;
}

message SerialClientRequest {
    string port = 1;
    int32 baudrate = 2;
    uint32 databits = 3;
    uint32 parity = 4;
    uint32 stopbits = 5;
    uint32 buffer_time = 6;
    uint32 timeout = 7;
}

message Slave {
    uint32 unit_id = 1;
}

message Relay {
    Slave slave = 1;
    uint32 address = 2;
    uint32 count = 3;
    repeated bool values = 4;
    bool writable = 5;
}

message Register {
    Slave slave = 1;
    uint32 address = 2;
    uint32 count = 3;
    repeated bytes values = 4;
    bool writable = 5;
}