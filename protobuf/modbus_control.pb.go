// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0
// source: modbus_control.proto

package protobuf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Function int32

const (
	Function_NEW_TCP_SERVER           Function = 0
	Function_NEW_RTU_SERVER           Function = 1
	Function_NEW_ASCII_SERVER         Function = 2
	Function_START                    Function = 3
	Function_STOP                     Function = 4
	Function_ADD_COILS                Function = 5
	Function_DELETE_COILS             Function = 6
	Function_ADD_DISCRETE_INPUTS      Function = 7
	Function_DELETE_DISCRETE_INPUTS   Function = 8
	Function_ADD_HOLDING_REGISTERS    Function = 9
	Function_DELETE_HOLDING_REGISTERS Function = 10
	Function_ADD_INPUT_REGISTERS      Function = 11
	Function_DELETE_INPUT_REGISTERS   Function = 12
	Function_NEW_TCP_CLIENT           Function = 13
	Function_NEW_RTU_CLIENT           Function = 14
	Function_NEW_ASCII_CLIENT         Function = 15
	Function_READ_COILS               Function = 16
	Function_READ_DISCRETE_INPUTS     Function = 17
	Function_READ_HOLDING_REGISTERS   Function = 18
	Function_READ_INPUT_REGISTERS     Function = 19
	Function_WRITE_SINGLE_COIL        Function = 20
	Function_WRITE_SINGLE_REGISTER    Function = 21
	Function_WRITE_MULTIPLE_COILS     Function = 22
	Function_WRITE_MULTIPLE_REGISTERS Function = 23
	Function_ACK                      Function = 24
	Function_NACK                     Function = 25
)

// Enum value maps for Function.
var (
	Function_name = map[int32]string{
		0:  "NEW_TCP_SERVER",
		1:  "NEW_RTU_SERVER",
		2:  "NEW_ASCII_SERVER",
		3:  "START",
		4:  "STOP",
		5:  "ADD_COILS",
		6:  "DELETE_COILS",
		7:  "ADD_DISCRETE_INPUTS",
		8:  "DELETE_DISCRETE_INPUTS",
		9:  "ADD_HOLDING_REGISTERS",
		10: "DELETE_HOLDING_REGISTERS",
		11: "ADD_INPUT_REGISTERS",
		12: "DELETE_INPUT_REGISTERS",
		13: "NEW_TCP_CLIENT",
		14: "NEW_RTU_CLIENT",
		15: "NEW_ASCII_CLIENT",
		16: "READ_COILS",
		17: "READ_DISCRETE_INPUTS",
		18: "READ_HOLDING_REGISTERS",
		19: "READ_INPUT_REGISTERS",
		20: "WRITE_SINGLE_COIL",
		21: "WRITE_SINGLE_REGISTER",
		22: "WRITE_MULTIPLE_COILS",
		23: "WRITE_MULTIPLE_REGISTERS",
		24: "ACK",
		25: "NACK",
	}
	Function_value = map[string]int32{
		"NEW_TCP_SERVER":           0,
		"NEW_RTU_SERVER":           1,
		"NEW_ASCII_SERVER":         2,
		"START":                    3,
		"STOP":                     4,
		"ADD_COILS":                5,
		"DELETE_COILS":             6,
		"ADD_DISCRETE_INPUTS":      7,
		"DELETE_DISCRETE_INPUTS":   8,
		"ADD_HOLDING_REGISTERS":    9,
		"DELETE_HOLDING_REGISTERS": 10,
		"ADD_INPUT_REGISTERS":      11,
		"DELETE_INPUT_REGISTERS":   12,
		"NEW_TCP_CLIENT":           13,
		"NEW_RTU_CLIENT":           14,
		"NEW_ASCII_CLIENT":         15,
		"READ_COILS":               16,
		"READ_DISCRETE_INPUTS":     17,
		"READ_HOLDING_REGISTERS":   18,
		"READ_INPUT_REGISTERS":     19,
		"WRITE_SINGLE_COIL":        20,
		"WRITE_SINGLE_REGISTER":    21,
		"WRITE_MULTIPLE_COILS":     22,
		"WRITE_MULTIPLE_REGISTERS": 23,
		"ACK":                      24,
		"NACK":                     25,
	}
)

func (x Function) Enum() *Function {
	p := new(Function)
	*p = x
	return p
}

func (x Function) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Function) Descriptor() protoreflect.EnumDescriptor {
	return file_modbus_control_proto_enumTypes[0].Descriptor()
}

func (Function) Type() protoreflect.EnumType {
	return &file_modbus_control_proto_enumTypes[0]
}

func (x Function) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Function.Descriptor instead.
func (Function) EnumDescriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{0}
}

// Header
type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Function Function `protobuf:"varint,1,opt,name=function,proto3,enum=gomodbus.Function" json:"function,omitempty"`
	Length   uint32   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetFunction() Function {
	if x != nil {
		return x.Function
	}
	return Function_NEW_TCP_SERVER
}

func (x *Header) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

// Message for NewTCPServer function
type NewTCPServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host      string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port      uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	UseTLS    bool   `protobuf:"varint,3,opt,name=useTLS,proto3" json:"useTLS,omitempty"`
	ByteOrder string `protobuf:"bytes,4,opt,name=byteOrder,proto3" json:"byteOrder,omitempty"`
	WordOrder string `protobuf:"bytes,5,opt,name=wordOrder,proto3" json:"wordOrder,omitempty"`
	CertFile  string `protobuf:"bytes,6,opt,name=certFile,proto3" json:"certFile,omitempty"`
	KeyFile   string `protobuf:"bytes,7,opt,name=keyFile,proto3" json:"keyFile,omitempty"`
	CaFile    string `protobuf:"bytes,8,opt,name=caFile,proto3" json:"caFile,omitempty"`
}

func (x *NewTCPServerRequest) Reset() {
	*x = NewTCPServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewTCPServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTCPServerRequest) ProtoMessage() {}

func (x *NewTCPServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTCPServerRequest.ProtoReflect.Descriptor instead.
func (*NewTCPServerRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{1}
}

func (x *NewTCPServerRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *NewTCPServerRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NewTCPServerRequest) GetUseTLS() bool {
	if x != nil {
		return x.UseTLS
	}
	return false
}

func (x *NewTCPServerRequest) GetByteOrder() string {
	if x != nil {
		return x.ByteOrder
	}
	return ""
}

func (x *NewTCPServerRequest) GetWordOrder() string {
	if x != nil {
		return x.WordOrder
	}
	return ""
}

func (x *NewTCPServerRequest) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *NewTCPServerRequest) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *NewTCPServerRequest) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

// Message for NewSerialServer function
type NewSerialServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port      string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	BaudRate  int32  `protobuf:"varint,2,opt,name=baudRate,proto3" json:"baudRate,omitempty"`
	DataBits  uint32 `protobuf:"varint,3,opt,name=dataBits,proto3" json:"dataBits,omitempty"`
	Parity    string `protobuf:"bytes,4,opt,name=parity,proto3" json:"parity,omitempty"`
	StopBits  string `protobuf:"bytes,5,opt,name=stopBits,proto3" json:"stopBits,omitempty"`
	ByteOrder string `protobuf:"bytes,6,opt,name=byteOrder,proto3" json:"byteOrder,omitempty"`
	WordOrder string `protobuf:"bytes,7,opt,name=wordOrder,proto3" json:"wordOrder,omitempty"`
}

func (x *NewSerialServerRequest) Reset() {
	*x = NewSerialServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSerialServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSerialServerRequest) ProtoMessage() {}

func (x *NewSerialServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSerialServerRequest.ProtoReflect.Descriptor instead.
func (*NewSerialServerRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{2}
}

func (x *NewSerialServerRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *NewSerialServerRequest) GetBaudRate() int32 {
	if x != nil {
		return x.BaudRate
	}
	return 0
}

func (x *NewSerialServerRequest) GetDataBits() uint32 {
	if x != nil {
		return x.DataBits
	}
	return 0
}

func (x *NewSerialServerRequest) GetParity() string {
	if x != nil {
		return x.Parity
	}
	return ""
}

func (x *NewSerialServerRequest) GetStopBits() string {
	if x != nil {
		return x.StopBits
	}
	return ""
}

func (x *NewSerialServerRequest) GetByteOrder() string {
	if x != nil {
		return x.ByteOrder
	}
	return ""
}

func (x *NewSerialServerRequest) GetWordOrder() string {
	if x != nil {
		return x.WordOrder
	}
	return ""
}

// Message for AddCoils function
type AddCoilsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values  []bool `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *AddCoilsRequest) Reset() {
	*x = AddCoilsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCoilsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCoilsRequest) ProtoMessage() {}

func (x *AddCoilsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCoilsRequest.ProtoReflect.Descriptor instead.
func (*AddCoilsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{3}
}

func (x *AddCoilsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *AddCoilsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *AddCoilsRequest) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

// Message for DeleteCoils function
type DeleteCoilsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID    uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Addresses []uint32 `protobuf:"varint,2,rep,packed,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeleteCoilsRequest) Reset() {
	*x = DeleteCoilsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCoilsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCoilsRequest) ProtoMessage() {}

func (x *DeleteCoilsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCoilsRequest.ProtoReflect.Descriptor instead.
func (*DeleteCoilsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCoilsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *DeleteCoilsRequest) GetAddresses() []uint32 {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// Message for AddDiscreteInputs function
type AddDiscreteInputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values  []bool `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *AddDiscreteInputsRequest) Reset() {
	*x = AddDiscreteInputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDiscreteInputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDiscreteInputsRequest) ProtoMessage() {}

func (x *AddDiscreteInputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDiscreteInputsRequest.ProtoReflect.Descriptor instead.
func (*AddDiscreteInputsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{5}
}

func (x *AddDiscreteInputsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *AddDiscreteInputsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *AddDiscreteInputsRequest) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

// Message for DeleteDiscreteInputs function
type DeleteDiscreteInputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID    uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Addresses []uint32 `protobuf:"varint,2,rep,packed,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeleteDiscreteInputsRequest) Reset() {
	*x = DeleteDiscreteInputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDiscreteInputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDiscreteInputsRequest) ProtoMessage() {}

func (x *DeleteDiscreteInputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDiscreteInputsRequest.ProtoReflect.Descriptor instead.
func (*DeleteDiscreteInputsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteDiscreteInputsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *DeleteDiscreteInputsRequest) GetAddresses() []uint32 {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// Message for AddHoldingRegisters function
type AddHoldingRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32   `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values  [][]byte `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AddHoldingRegistersRequest) Reset() {
	*x = AddHoldingRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHoldingRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHoldingRegistersRequest) ProtoMessage() {}

func (x *AddHoldingRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHoldingRegistersRequest.ProtoReflect.Descriptor instead.
func (*AddHoldingRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{7}
}

func (x *AddHoldingRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *AddHoldingRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *AddHoldingRegistersRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

// Message for DeleteHoldingRegisters function
type DeleteHoldingRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID    uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Addresses []uint32 `protobuf:"varint,2,rep,packed,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeleteHoldingRegistersRequest) Reset() {
	*x = DeleteHoldingRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHoldingRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHoldingRegistersRequest) ProtoMessage() {}

func (x *DeleteHoldingRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHoldingRegistersRequest.ProtoReflect.Descriptor instead.
func (*DeleteHoldingRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteHoldingRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *DeleteHoldingRegistersRequest) GetAddresses() []uint32 {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// Message for AddInputRegisters function
type AddInputRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32   `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values  [][]byte `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *AddInputRegistersRequest) Reset() {
	*x = AddInputRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddInputRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddInputRegistersRequest) ProtoMessage() {}

func (x *AddInputRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddInputRegistersRequest.ProtoReflect.Descriptor instead.
func (*AddInputRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{9}
}

func (x *AddInputRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *AddInputRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *AddInputRegistersRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

// Message for DeleteInputRegisters function
type DeleteInputRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID    uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Addresses []uint32 `protobuf:"varint,2,rep,packed,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *DeleteInputRegistersRequest) Reset() {
	*x = DeleteInputRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteInputRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteInputRegistersRequest) ProtoMessage() {}

func (x *DeleteInputRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteInputRegistersRequest.ProtoReflect.Descriptor instead.
func (*DeleteInputRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteInputRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *DeleteInputRegistersRequest) GetAddresses() []uint32 {
	if x != nil {
		return x.Addresses
	}
	return nil
}

// Message for NewTCPClient function
type NewTCPClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	UseTLS   bool   `protobuf:"varint,3,opt,name=useTLS,proto3" json:"useTLS,omitempty"`
	CertFile string `protobuf:"bytes,4,opt,name=certFile,proto3" json:"certFile,omitempty"`
	KeyFile  string `protobuf:"bytes,5,opt,name=keyFile,proto3" json:"keyFile,omitempty"`
	CaFile   string `protobuf:"bytes,6,opt,name=caFile,proto3" json:"caFile,omitempty"`
}

func (x *NewTCPClientRequest) Reset() {
	*x = NewTCPClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewTCPClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTCPClientRequest) ProtoMessage() {}

func (x *NewTCPClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTCPClientRequest.ProtoReflect.Descriptor instead.
func (*NewTCPClientRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{11}
}

func (x *NewTCPClientRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *NewTCPClientRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NewTCPClientRequest) GetUseTLS() bool {
	if x != nil {
		return x.UseTLS
	}
	return false
}

func (x *NewTCPClientRequest) GetCertFile() string {
	if x != nil {
		return x.CertFile
	}
	return ""
}

func (x *NewTCPClientRequest) GetKeyFile() string {
	if x != nil {
		return x.KeyFile
	}
	return ""
}

func (x *NewTCPClientRequest) GetCaFile() string {
	if x != nil {
		return x.CaFile
	}
	return ""
}

// Message for NewSerialClient function
type NewSerialClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Port     string `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	BaudRate uint32 `protobuf:"varint,2,opt,name=baudRate,proto3" json:"baudRate,omitempty"`
	DataBits uint32 `protobuf:"varint,3,opt,name=dataBits,proto3" json:"dataBits,omitempty"`
	Parity   string `protobuf:"bytes,4,opt,name=parity,proto3" json:"parity,omitempty"`
	StopBits string `protobuf:"bytes,5,opt,name=stopBits,proto3" json:"stopBits,omitempty"`
}

func (x *NewSerialClientRequest) Reset() {
	*x = NewSerialClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSerialClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSerialClientRequest) ProtoMessage() {}

func (x *NewSerialClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSerialClientRequest.ProtoReflect.Descriptor instead.
func (*NewSerialClientRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{12}
}

func (x *NewSerialClientRequest) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *NewSerialClientRequest) GetBaudRate() uint32 {
	if x != nil {
		return x.BaudRate
	}
	return 0
}

func (x *NewSerialClientRequest) GetDataBits() uint32 {
	if x != nil {
		return x.DataBits
	}
	return 0
}

func (x *NewSerialClientRequest) GetParity() string {
	if x != nil {
		return x.Parity
	}
	return ""
}

func (x *NewSerialClientRequest) GetStopBits() string {
	if x != nil {
		return x.StopBits
	}
	return ""
}

// Request and Response messages for ReadCoils
type ReadCoilsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID   uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address  uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Quantity uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadCoilsRequest) Reset() {
	*x = ReadCoilsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCoilsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsRequest) ProtoMessage() {}

func (x *ReadCoilsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsRequest.ProtoReflect.Descriptor instead.
func (*ReadCoilsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{13}
}

func (x *ReadCoilsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *ReadCoilsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadCoilsRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadCoilsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coils []bool `protobuf:"varint,1,rep,packed,name=coils,proto3" json:"coils,omitempty"`
}

func (x *ReadCoilsResponse) Reset() {
	*x = ReadCoilsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadCoilsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCoilsResponse) ProtoMessage() {}

func (x *ReadCoilsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCoilsResponse.ProtoReflect.Descriptor instead.
func (*ReadCoilsResponse) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{14}
}

func (x *ReadCoilsResponse) GetCoils() []bool {
	if x != nil {
		return x.Coils
	}
	return nil
}

// Request and Response messages for ReadDiscreteInputs
type ReadDiscreteInputsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID   uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address  uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Quantity uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadDiscreteInputsRequest) Reset() {
	*x = ReadDiscreteInputsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDiscreteInputsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsRequest) ProtoMessage() {}

func (x *ReadDiscreteInputsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsRequest.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{15}
}

func (x *ReadDiscreteInputsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *ReadDiscreteInputsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadDiscreteInputsRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadDiscreteInputsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inputs []bool `protobuf:"varint,1,rep,packed,name=inputs,proto3" json:"inputs,omitempty"`
}

func (x *ReadDiscreteInputsResponse) Reset() {
	*x = ReadDiscreteInputsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDiscreteInputsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDiscreteInputsResponse) ProtoMessage() {}

func (x *ReadDiscreteInputsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDiscreteInputsResponse.ProtoReflect.Descriptor instead.
func (*ReadDiscreteInputsResponse) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{16}
}

func (x *ReadDiscreteInputsResponse) GetInputs() []bool {
	if x != nil {
		return x.Inputs
	}
	return nil
}

// Request and Response messages for ReadHoldingRegisters
type ReadHoldingRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID   uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address  uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Quantity uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadHoldingRegistersRequest) Reset() {
	*x = ReadHoldingRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHoldingRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersRequest) ProtoMessage() {}

func (x *ReadHoldingRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersRequest.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{17}
}

func (x *ReadHoldingRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *ReadHoldingRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadHoldingRegistersRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadHoldingRegistersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registers [][]byte `protobuf:"bytes,1,rep,name=registers,proto3" json:"registers,omitempty"`
}

func (x *ReadHoldingRegistersResponse) Reset() {
	*x = ReadHoldingRegistersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadHoldingRegistersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadHoldingRegistersResponse) ProtoMessage() {}

func (x *ReadHoldingRegistersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadHoldingRegistersResponse.ProtoReflect.Descriptor instead.
func (*ReadHoldingRegistersResponse) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{18}
}

func (x *ReadHoldingRegistersResponse) GetRegisters() [][]byte {
	if x != nil {
		return x.Registers
	}
	return nil
}

// Request and Response messages for ReadInputRegisters
type ReadInputRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID   uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address  uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Quantity uint32 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ReadInputRegistersRequest) Reset() {
	*x = ReadInputRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInputRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersRequest) ProtoMessage() {}

func (x *ReadInputRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersRequest.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{19}
}

func (x *ReadInputRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *ReadInputRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *ReadInputRegistersRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ReadInputRegistersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registers [][]byte `protobuf:"bytes,1,rep,name=registers,proto3" json:"registers,omitempty"`
}

func (x *ReadInputRegistersResponse) Reset() {
	*x = ReadInputRegistersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadInputRegistersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadInputRegistersResponse) ProtoMessage() {}

func (x *ReadInputRegistersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadInputRegistersResponse.ProtoReflect.Descriptor instead.
func (*ReadInputRegistersResponse) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{20}
}

func (x *ReadInputRegistersResponse) GetRegisters() [][]byte {
	if x != nil {
		return x.Registers
	}
	return nil
}

// Request and Response messages for WriteSingleCoil
type WriteSingleCoilRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Value   bool   `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteSingleCoilRequest) Reset() {
	*x = WriteSingleCoilRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSingleCoilRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleCoilRequest) ProtoMessage() {}

func (x *WriteSingleCoilRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleCoilRequest.ProtoReflect.Descriptor instead.
func (*WriteSingleCoilRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{21}
}

func (x *WriteSingleCoilRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *WriteSingleCoilRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleCoilRequest) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

// Request and Response messages for WriteMultipleCoils
type WriteMultipleCoilsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Values  []bool `protobuf:"varint,3,rep,packed,name=values,proto3" json:"values,omitempty"`
}

func (x *WriteMultipleCoilsRequest) Reset() {
	*x = WriteMultipleCoilsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMultipleCoilsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMultipleCoilsRequest) ProtoMessage() {}

func (x *WriteMultipleCoilsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMultipleCoilsRequest.ProtoReflect.Descriptor instead.
func (*WriteMultipleCoilsRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{22}
}

func (x *WriteMultipleCoilsRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *WriteMultipleCoilsRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteMultipleCoilsRequest) GetValues() []bool {
	if x != nil {
		return x.Values
	}
	return nil
}

// Request and Response messages for WriteSingleRegister
type WriteSingleRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID  uint32 `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address uint32 `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Value   []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *WriteSingleRegisterRequest) Reset() {
	*x = WriteSingleRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteSingleRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteSingleRegisterRequest) ProtoMessage() {}

func (x *WriteSingleRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteSingleRegisterRequest.ProtoReflect.Descriptor instead.
func (*WriteSingleRegisterRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{23}
}

func (x *WriteSingleRegisterRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *WriteSingleRegisterRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteSingleRegisterRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Request and Response messages for WriteMultipleRegisters
type WriteMultipleRegistersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnitID   uint32   `protobuf:"varint,1,opt,name=unitID,proto3" json:"unitID,omitempty"`
	Address  uint32   `protobuf:"varint,2,opt,name=address,proto3" json:"address,omitempty"`
	Quantity uint32   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Values   [][]byte `protobuf:"bytes,4,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *WriteMultipleRegistersRequest) Reset() {
	*x = WriteMultipleRegistersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_modbus_control_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteMultipleRegistersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteMultipleRegistersRequest) ProtoMessage() {}

func (x *WriteMultipleRegistersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_modbus_control_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteMultipleRegistersRequest.ProtoReflect.Descriptor instead.
func (*WriteMultipleRegistersRequest) Descriptor() ([]byte, []int) {
	return file_modbus_control_proto_rawDescGZIP(), []int{24}
}

func (x *WriteMultipleRegistersRequest) GetUnitID() uint32 {
	if x != nil {
		return x.UnitID
	}
	return 0
}

func (x *WriteMultipleRegistersRequest) GetAddress() uint32 {
	if x != nil {
		return x.Address
	}
	return 0
}

func (x *WriteMultipleRegistersRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *WriteMultipleRegistersRequest) GetValues() [][]byte {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_modbus_control_proto protoreflect.FileDescriptor

var file_modbus_control_proto_rawDesc = []byte{
	0x0a, 0x14, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x67, 0x6f, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73,
	0x22, 0x50, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x67,
	0x6f, 0x6d, 0x6f, 0x64, 0x62, 0x75, 0x73, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x22, 0xdf, 0x01, 0x0a, 0x13, 0x4e, 0x65, 0x77, 0x54, 0x43, 0x50, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x54, 0x4c, 0x53, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x4c, 0x53, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x79,
	0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x79, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x64,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72,
	0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0xd4, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x75, 0x64, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x61, 0x75, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x42, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x42, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x69, 0x74, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x69, 0x74, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x5b, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x4a, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72,
	0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x1b, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22,
	0x66, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x64,
	0x0a, 0x18, 0x41, 0x64, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e,
	0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74,
	0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x22, 0x53, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xa3, 0x01, 0x0a, 0x13, 0x4e, 0x65,
	0x77, 0x54, 0x43, 0x50, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x54, 0x4c, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x73, 0x65, 0x54, 0x4c,
	0x53, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x61, 0x46, 0x69, 0x6c,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x22,
	0x98, 0x01, 0x0a, 0x16, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x61, 0x75, 0x64, 0x52, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x62, 0x61, 0x75, 0x64, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x61, 0x42, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x42, 0x69, 0x74, 0x73, 0x22, 0x60, 0x0a, 0x10, 0x52, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x29, 0x0a, 0x11,
	0x52, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x05, 0x63, 0x6f, 0x69, 0x6c, 0x73, 0x22, 0x69, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x44,
	0x69, 0x73, 0x63, 0x72, 0x65, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x73, 0x63, 0x72, 0x65,
	0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x6b, 0x0a, 0x1b, 0x52, 0x65, 0x61, 0x64,
	0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3c, 0x0a, 0x1c, 0x52, 0x65, 0x61, 0x64, 0x48, 0x6f, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x22, 0x69, 0x0a, 0x19, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x3a,
	0x0a, 0x1a, 0x52, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x09, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x65, 0x0a, 0x19,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49,
	0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x08, 0x52, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x1a, 0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x69, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x1d, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x6e, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x6e, 0x69,
	0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x2a, 0xbc, 0x04, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x0e, 0x4e, 0x45, 0x57, 0x5f, 0x54, 0x43, 0x50, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x57, 0x5f, 0x52, 0x54, 0x55, 0x5f, 0x53, 0x45,
	0x52, 0x56, 0x45, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x45, 0x57, 0x5f, 0x41, 0x53,
	0x43, 0x49, 0x49, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10,
	0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x44, 0x44, 0x5f, 0x43, 0x4f, 0x49, 0x4c, 0x53, 0x10, 0x05,
	0x12, 0x10, 0x0a, 0x0c, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x49, 0x4c, 0x53,
	0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x44, 0x44, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x52, 0x45,
	0x54, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x53, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x52, 0x45, 0x54, 0x45, 0x5f, 0x49,
	0x4e, 0x50, 0x55, 0x54, 0x53, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x44, 0x44, 0x5f, 0x48,
	0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x53,
	0x10, 0x09, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x48, 0x4f, 0x4c,
	0x44, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x53, 0x10, 0x0a,
	0x12, 0x17, 0x0a, 0x13, 0x41, 0x44, 0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x53, 0x10, 0x0b, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54,
	0x45, 0x52, 0x53, 0x10, 0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x57, 0x5f, 0x54, 0x43, 0x50,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x45, 0x57,
	0x5f, 0x52, 0x54, 0x55, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0x0e, 0x12, 0x14, 0x0a,
	0x10, 0x4e, 0x45, 0x57, 0x5f, 0x41, 0x53, 0x43, 0x49, 0x49, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x10, 0x0f, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x49, 0x4c,
	0x53, 0x10, 0x10, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x44, 0x49, 0x53, 0x43,
	0x52, 0x45, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x53, 0x10, 0x11, 0x12, 0x1a, 0x0a,
	0x16, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x48, 0x4f, 0x4c, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x52, 0x45,
	0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x53, 0x10, 0x12, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41,
	0x44, 0x5f, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52,
	0x53, 0x10, 0x13, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x53, 0x49, 0x4e,
	0x47, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x49, 0x4c, 0x10, 0x14, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x52,
	0x49, 0x54, 0x45, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x45, 0x52, 0x10, 0x15, 0x12, 0x18, 0x0a, 0x14, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d,
	0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x49, 0x4c, 0x53, 0x10, 0x16, 0x12,
	0x1c, 0x0a, 0x18, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x50, 0x4c,
	0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x45, 0x52, 0x53, 0x10, 0x17, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x43, 0x4b, 0x10, 0x18, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x41, 0x43, 0x4b, 0x10, 0x19,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_modbus_control_proto_rawDescOnce sync.Once
	file_modbus_control_proto_rawDescData = file_modbus_control_proto_rawDesc
)

func file_modbus_control_proto_rawDescGZIP() []byte {
	file_modbus_control_proto_rawDescOnce.Do(func() {
		file_modbus_control_proto_rawDescData = protoimpl.X.CompressGZIP(file_modbus_control_proto_rawDescData)
	})
	return file_modbus_control_proto_rawDescData
}

var file_modbus_control_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_modbus_control_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_modbus_control_proto_goTypes = []any{
	(Function)(0),                         // 0: gomodbus.Function
	(*Header)(nil),                        // 1: gomodbus.Header
	(*NewTCPServerRequest)(nil),           // 2: gomodbus.NewTCPServerRequest
	(*NewSerialServerRequest)(nil),        // 3: gomodbus.NewSerialServerRequest
	(*AddCoilsRequest)(nil),               // 4: gomodbus.AddCoilsRequest
	(*DeleteCoilsRequest)(nil),            // 5: gomodbus.DeleteCoilsRequest
	(*AddDiscreteInputsRequest)(nil),      // 6: gomodbus.AddDiscreteInputsRequest
	(*DeleteDiscreteInputsRequest)(nil),   // 7: gomodbus.DeleteDiscreteInputsRequest
	(*AddHoldingRegistersRequest)(nil),    // 8: gomodbus.AddHoldingRegistersRequest
	(*DeleteHoldingRegistersRequest)(nil), // 9: gomodbus.DeleteHoldingRegistersRequest
	(*AddInputRegistersRequest)(nil),      // 10: gomodbus.AddInputRegistersRequest
	(*DeleteInputRegistersRequest)(nil),   // 11: gomodbus.DeleteInputRegistersRequest
	(*NewTCPClientRequest)(nil),           // 12: gomodbus.NewTCPClientRequest
	(*NewSerialClientRequest)(nil),        // 13: gomodbus.NewSerialClientRequest
	(*ReadCoilsRequest)(nil),              // 14: gomodbus.ReadCoilsRequest
	(*ReadCoilsResponse)(nil),             // 15: gomodbus.ReadCoilsResponse
	(*ReadDiscreteInputsRequest)(nil),     // 16: gomodbus.ReadDiscreteInputsRequest
	(*ReadDiscreteInputsResponse)(nil),    // 17: gomodbus.ReadDiscreteInputsResponse
	(*ReadHoldingRegistersRequest)(nil),   // 18: gomodbus.ReadHoldingRegistersRequest
	(*ReadHoldingRegistersResponse)(nil),  // 19: gomodbus.ReadHoldingRegistersResponse
	(*ReadInputRegistersRequest)(nil),     // 20: gomodbus.ReadInputRegistersRequest
	(*ReadInputRegistersResponse)(nil),    // 21: gomodbus.ReadInputRegistersResponse
	(*WriteSingleCoilRequest)(nil),        // 22: gomodbus.WriteSingleCoilRequest
	(*WriteMultipleCoilsRequest)(nil),     // 23: gomodbus.WriteMultipleCoilsRequest
	(*WriteSingleRegisterRequest)(nil),    // 24: gomodbus.WriteSingleRegisterRequest
	(*WriteMultipleRegistersRequest)(nil), // 25: gomodbus.WriteMultipleRegistersRequest
}
var file_modbus_control_proto_depIdxs = []int32{
	0, // 0: gomodbus.Header.function:type_name -> gomodbus.Function
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_modbus_control_proto_init() }
func file_modbus_control_proto_init() {
	if File_modbus_control_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_modbus_control_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*NewTCPServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NewSerialServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*AddCoilsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteCoilsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AddDiscreteInputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteDiscreteInputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*AddHoldingRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHoldingRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddInputRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteInputRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*NewTCPClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*NewSerialClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*ReadCoilsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*ReadCoilsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReadDiscreteInputsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ReadDiscreteInputsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*ReadHoldingRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*ReadHoldingRegistersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*ReadInputRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*ReadInputRegistersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*WriteSingleCoilRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*WriteMultipleCoilsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*WriteSingleRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_modbus_control_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*WriteMultipleRegistersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_modbus_control_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_modbus_control_proto_goTypes,
		DependencyIndexes: file_modbus_control_proto_depIdxs,
		EnumInfos:         file_modbus_control_proto_enumTypes,
		MessageInfos:      file_modbus_control_proto_msgTypes,
	}.Build()
	File_modbus_control_proto = out.File
	file_modbus_control_proto_rawDesc = nil
	file_modbus_control_proto_goTypes = nil
	file_modbus_control_proto_depIdxs = nil
}
