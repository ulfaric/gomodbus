# Makefile for python interface for package gomodbus.
# File is generated by gopy. Do not edit.
# gopy build -output=./gopy github.com/ulfaric/gomodbus

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/home/ursorc/.pyenv/versions/3.12.6/bin/python
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = "-I/home/ursorc/.pyenv/versions/3.12.6/include/python3.12"
LDFLAGS = "-L/home/ursorc/.pyenv/versions/3.12.6/lib" "-lpython3.12" -ldl -L/home/ursorc/.pyenv/versions/3.12.6/lib -Wl,-rpath,/home/ursorc/.pyenv/versions/3.12.6/lib -lm

all: gen build

gen:
	gopy gen -no-make github.com/ulfaric/gomodbus

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm gomodbus.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w gomodbus.go
	# generate gomodbus_go$(LIBEXT) from gomodbus.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o gomodbus_go$(LIBEXT) gomodbus.go
	# use pybindgen to build the gomodbus.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _gomodbus$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated gomodbus.py python wrapper imports this c-code package
	
	$(GCC) gomodbus.c  gomodbus_go$(LIBEXT) -o _gomodbus$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


