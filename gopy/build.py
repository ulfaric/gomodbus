# python build stubs for package gomodbus
# File is generated by gopy. Do not edit.
# gopy build -output=./gopy github.com/ulfaric/gomodbus

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_gomodbus')
mod.add_include('"gomodbus_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Slice_byte_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_byte_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_zap_Option_CTor', retval('int64_t'), [])
mod.add_function('Slice_zap_Option_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_zap_Option_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_zap_Option_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_zap_Option_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_zap_Option_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_zapcore_Field_CTor', retval('int64_t'), [])
mod.add_function('Slice_zapcore_Field_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_zapcore_Field_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_zapcore_Field_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_zapcore_Field_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_zapcore_Field_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_interface__CTor', retval('int64_t'), [])
mod.add_function('Slice_interface__len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_interface__elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_interface__subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_interface__set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_interface__append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_CTor', retval('int64_t'), [])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_elem', retval('int64_t'), [param('int64_t', 'handle'), param('uint8_t', '_ky')])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_contains', retval('bool'), [param('int64_t', 'handle'), param('uint8_t', '_ky')])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_set', None, [param('int64_t', 'handle'), param('uint8_t', 'key'), param('int64_t', 'value')])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_delete', None, [param('int64_t', 'handle'), param('uint8_t', '_ky')])
mod.add_function('Map_byte_Ptr_gomodbus_Slave_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_byte_string_CTor', retval('int64_t'), [])
mod.add_function('Map_byte_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_byte_string_elem', retval('char*'), [param('int64_t', 'handle'), param('uint8_t', '_ky')])
mod.add_function('Map_byte_string_contains', retval('bool'), [param('int64_t', 'handle'), param('uint8_t', '_ky')])
mod.add_function('Map_byte_string_set', None, [param('int64_t', 'handle'), param('uint8_t', 'key'), param('char*', 'value')])
mod.add_function('Map_byte_string_delete', None, [param('int64_t', 'handle'), param('uint8_t', '_ky')])
mod.add_function('Map_byte_string_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_uint16_Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Map_uint16_Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_uint16_Slice_byte_elem', retval('int64_t'), [param('int64_t', 'handle'), param('uint16_t', '_ky')])
mod.add_function('Map_uint16_Slice_byte_contains', retval('bool'), [param('int64_t', 'handle'), param('uint16_t', '_ky')])
mod.add_function('Map_uint16_Slice_byte_set', None, [param('int64_t', 'handle'), param('uint16_t', 'key'), param('int64_t', 'value')])
mod.add_function('Map_uint16_Slice_byte_delete', None, [param('int64_t', 'handle'), param('uint16_t', '_ky')])
mod.add_function('Map_uint16_Slice_byte_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_uint16_bool_CTor', retval('int64_t'), [])
mod.add_function('Map_uint16_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_uint16_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('uint16_t', '_ky')])
mod.add_function('Map_uint16_bool_contains', retval('bool'), [param('int64_t', 'handle'), param('uint16_t', '_ky')])
mod.add_function('Map_uint16_bool_set', None, [param('int64_t', 'handle'), param('uint16_t', 'key'), param('bool', 'value')])
mod.add_function('Map_uint16_bool_delete', None, [param('int64_t', 'handle'), param('uint16_t', '_ky')])
mod.add_function('Map_uint16_bool_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_Logger', retval('int64_t'), [])
mod.add_function('gomodbus_Set_Logger', None, [param('int64_t', 'val')])
mod.add_function('gomodbus_ModbusException', retval('int64_t'), [])
mod.add_function('gomodbus_Set_ModbusException', None, [param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_Client_Connect', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_Client_Disconnect', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_Client_ReceiveResponse', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_Client_SendRequest', retval('char*'), [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('int64_t', 'pduBytes')])
add_checked_function(mod, 'gomodbus_Server_AddSlave', None, [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Server_GetSlave', retval('int64_t'), [param('int64_t', '_handle'), param('uint8_t', 'unitID')])
add_checked_function(mod, 'gomodbus_Server_RemoveSlave', None, [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Server_Start', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_Server_Stop', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('gomodbus_TCPClient_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_TCPClient_Host_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPClient_Host_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_TCPClient_Port_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPClient_Port_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_TCPClient_UseTLS_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPClient_UseTLS_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('gomodbus_TCPClient_CertFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPClient_CertFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_TCPClient_KeyFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPClient_KeyFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_TCPClient_CAFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPClient_CAFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_function(mod, 'gomodbus_TCPClient_Connect', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_TCPClient_Disconnect', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_TCPClient_SendRequest', retval('char*'), [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('int64_t', 'pduBytes')])
add_checked_function(mod, 'gomodbus_TCPClient_ReceiveResponse', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('gomodbus_PDUErrorResponse_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUErrorResponse_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUErrorResponse_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUErrorResponse_ExceptionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUErrorResponse_ExceptionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUErrorResponse_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUErrorResponse_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteMultipleCoils_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_StartingAddress_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_StartingAddress_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_Quantity_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_Quantity_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_ByteCount_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_ByteCount_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_Values_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoils_Values_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleCoils_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleCoils_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_Address_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_Address_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_Quantity_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegistersResponse_Quantity_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleRegistersResponse_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleRegistersResponse_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteSingleRegister_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteSingleRegister_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleRegister_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleRegister_Address_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleRegister_Address_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleRegister_Value_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleRegister_Value_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleRegister_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleRegister_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_Slave_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_Slave_Coils_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_Slave_Coils_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_Slave_DiscreteInputs_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_Slave_DiscreteInputs_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_Slave_HoldingRegisters_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_Slave_HoldingRegisters_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_Slave_InputRegisters_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_Slave_InputRegisters_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_Slave_AddCoils', None, [param('int64_t', '_handle'), param('uint16_t', 'address'), param('int64_t', 'values'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_DeleteCoils', None, [param('int64_t', '_handle'), param('int64_t', 'addresses'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_AddDiscreteInputs', None, [param('int64_t', '_handle'), param('uint16_t', 'address'), param('int64_t', 'values'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_DeleteDiscreteInputs', None, [param('int64_t', '_handle'), param('int64_t', 'addresses'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_AddHoldingRegisters', None, [param('int64_t', '_handle'), param('uint16_t', 'address'), param('int64_t', 'values'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_DeleteHoldingRegisters', None, [param('int64_t', '_handle'), param('int64_t', 'addresses'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_AddInputRegisters', None, [param('int64_t', '_handle'), param('uint16_t', 'address'), param('int64_t', 'values'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_Slave_DeleteInputRegisters', None, [param('int64_t', '_handle'), param('int64_t', 'addresses'), param('bool', 'goRun')])
mod.add_function('gomodbus_CustomColorEncoder_CTor', retval('int64_t'), [])
add_checked_function(mod, 'gomodbus_CustomColorEncoder_EncodeEntry', retval('int64_t'), [param('int64_t', '_handle'), param('int64_t', 'entry'), param('int64_t', 'fields')])
mod.add_function('gomodbus_PDUReadResponse_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUReadResponse_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUReadResponse_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUReadResponse_ByteCount_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUReadResponse_ByteCount_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUReadResponse_Data_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUReadResponse_Data_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUReadResponse_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUReadResponse_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteSingleCoil_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteSingleCoil_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleCoil_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleCoil_Address_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleCoil_Address_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleCoil_Value_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleCoil_Value_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleCoil_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleCoil_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_SerialClient_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_SerialClient_Port_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialClient_Port_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_SerialClient_BaudRate_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialClient_BaudRate_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_SerialClient_DataBits_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialClient_DataBits_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_SerialClient_Parity_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialClient_Parity_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_SerialClient_StopBits_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialClient_StopBits_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
add_checked_function(mod, 'gomodbus_SerialClient_Connect', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_SerialClient_Disconnect', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_SerialClient_SendRequest', retval('char*'), [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('int64_t', 'pduBytes')])
add_checked_function(mod, 'gomodbus_SerialClient_ReceiveResponse', retval('int64_t'), [param('int64_t', '_handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_StartingAddress_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_StartingAddress_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_Quantity_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_Quantity_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_ByteCount_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_ByteCount_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_Values_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleRegisters_Values_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleRegisters_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleRegisters_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_Address_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_Address_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_Value_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleCoilResponse_Value_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleCoilResponse_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleCoilResponse_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_TCPADU_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_TCPADU_TransactionID_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPADU_TransactionID_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_TCPADU_ProtocolID_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPADU_ProtocolID_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_TCPADU_Length_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPADU_Length_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_TCPADU_UnitID_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPADU_UnitID_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_TCPADU_PDU_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPADU_PDU_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_TCPADU_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_TCPADU_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_SerialServer_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_SerialServer_Port_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialServer_Port_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_SerialServer_BaudRate_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialServer_BaudRate_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_SerialServer_DataBits_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialServer_DataBits_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_SerialServer_Parity_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialServer_Parity_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_SerialServer_StopBits_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialServer_StopBits_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_SerialServer_Slaves_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialServer_Slaves_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_SerialServer_AddSlave', None, [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_SerialServer_GetSlave', retval('int64_t'), [param('int64_t', '_handle'), param('uint8_t', 'unitID')])
add_checked_function(mod, 'gomodbus_SerialServer_RemoveSlave', None, [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_SerialServer_Start', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_SerialServer_Stop', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('gomodbus_TCPServer_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_TCPServer_Host_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_Host_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_TCPServer_Port_Get', retval('int32_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_Port_Set', None, [param('int64_t', 'handle'), param('int32_t', 'val')])
mod.add_function('gomodbus_TCPServer_Slaves_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_Slaves_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_TCPServer_UseTLS_Get', retval('bool'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_UseTLS_Set', None, [param('int64_t', 'handle'), param('bool', 'val')])
mod.add_function('gomodbus_TCPServer_CertFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_CertFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_TCPServer_KeyFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_KeyFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('gomodbus_TCPServer_CAFile_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_TCPServer_CAFile_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
add_checked_function(mod, 'gomodbus_TCPServer_AddSlave', None, [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_TCPServer_GetSlave', retval('int64_t'), [param('int64_t', '_handle'), param('uint8_t', 'unitID')])
add_checked_function(mod, 'gomodbus_TCPServer_RemoveSlave', None, [param('int64_t', '_handle'), param('uint8_t', 'unitID'), param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_TCPServer_Start', retval('char*'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_TCPServer_Stop', retval('char*'), [param('int64_t', '_handle')])
mod.add_function('gomodbus_PDURead_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDURead_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDURead_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDURead_StartingAddress_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDURead_StartingAddress_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDURead_Quantity_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDURead_Quantity_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
add_checked_function(mod, 'gomodbus_PDURead_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDURead_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_Address_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_Address_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_Quantity_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteMultipleCoilsResponse_Quantity_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleCoilsResponse_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteMultipleCoilsResponse_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_FunctionCode_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_FunctionCode_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_Address_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_Address_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_Value_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_PDUWriteSingleRegisterResponse_Value_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleRegisterResponse_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_PDUWriteSingleRegisterResponse_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
mod.add_function('gomodbus_SerialADU_CTor', retval('int64_t'), [])
mod.add_function('gomodbus_SerialADU_UnitID_Get', retval('uint8_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialADU_UnitID_Set', None, [param('int64_t', 'handle'), param('uint8_t', 'val')])
mod.add_function('gomodbus_SerialADU_PDU_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialADU_PDU_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('gomodbus_SerialADU_CRC_Get', retval('uint16_t'), [param('int64_t', 'handle')])
mod.add_function('gomodbus_SerialADU_CRC_Set', None, [param('int64_t', 'handle'), param('uint16_t', 'val')])
add_checked_function(mod, 'gomodbus_SerialADU_ToBytes', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'gomodbus_SerialADU_FromBytes', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
add_checked_function(mod, 'gomodbus_NewPDUErrorResponse', retval('int64_t'), [param('uint8_t', 'functionCode'), param('uint8_t', 'exceptionCode')])
add_checked_function(mod, 'gomodbus_NewPDUWriteMultipleCoils', retval('int64_t'), [param('uint16_t', 'startingAddress'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_NewWriteMultipleRegistersResponse', retval('int64_t'), [param('uint16_t', 'address'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewPDUWriteSingleRegister', retval('int64_t'), [param('uint16_t', 'registerAddress'), param('int64_t', 'registerValue')])
add_checked_function(mod, 'gomodbus_NewPDUReadCoilsResponse', retval('int64_t'), [param('int64_t', 'coils')])
add_checked_function(mod, 'gomodbus_NewPDUReadDiscreteInputsResponse', retval('int64_t'), [param('int64_t', 'inputs')])
add_checked_function(mod, 'gomodbus_NewPDUReadHoldingRegistersResponse', retval('int64_t'), [param('int64_t', 'registers')])
add_checked_function(mod, 'gomodbus_NewPDUReadInputRegistersResponse', retval('int64_t'), [param('int64_t', 'registers')])
add_checked_function(mod, 'gomodbus_NewPDUWriteSingleCoil', retval('int64_t'), [param('uint16_t', 'address'), param('bool', 'value')])
add_checked_function(mod, 'gomodbus_NewPDUWriteMultipleRegisters', retval('int64_t'), [param('uint16_t', 'startingAddress'), param('uint16_t', 'quantity'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_NewWriteSingleCoilResponse', retval('int64_t'), [param('uint16_t', 'address'), param('bool', 'value')])
add_checked_function(mod, 'gomodbus_NewTCPADU', retval('int64_t'), [param('uint16_t', 'transactionID'), param('uint8_t', 'unitID'), param('int64_t', 'pdu')])
add_checked_function(mod, 'gomodbus_NewPDUReadInputRegisters', retval('int64_t'), [param('uint16_t', 'startingAddress'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewPDUReadDiscreteInputs', retval('int64_t'), [param('uint16_t', 'startingAddress'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewPDUReadCoils', retval('int64_t'), [param('uint16_t', 'startingAddress'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewPDUReadHoldingRegisters', retval('int64_t'), [param('uint16_t', 'startingAddress'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewWriteMultipleCoilsResponse', retval('int64_t'), [param('uint16_t', 'address'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewWriteSingleRegisterResponse', retval('int64_t'), [param('uint16_t', 'address'), param('int64_t', 'value')])
add_checked_function(mod, 'gomodbus_NewSerialADU', retval('int64_t'), [param('uint8_t', 'address'), param('int64_t', 'pdu')])
add_checked_function(mod, 'gomodbus_ReadDiscreteInputs', retval('int64_t'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_NewSerialClient', retval('int64_t'), [param('char*', 'port'), param('int64_t', 'baudRate'), param('uint8_t', 'dataBits'), param('uint8_t', 'parity'), param('uint8_t', 'stopBits')])
add_checked_function(mod, 'gomodbus_NewSerialServer', retval('int64_t'), [param('char*', 'port'), param('int64_t', 'baudRate'), param('uint8_t', 'dataBits'), param('uint8_t', 'parity'), param('uint8_t', 'stopBits')])
add_checked_function(mod, 'gomodbus_ReadInputRegisters', retval('int64_t'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_DeleteCoils', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('int64_t', 'addresses')])
add_checked_function(mod, 'gomodbus_InitializeLogger', retval('int64_t'), [])
add_checked_function(mod, 'gomodbus_Serializer', retval('int64_t'), [param('char*', 'data'), param('char*', 'byteOrder'), param('char*', 'wordOrder')])
add_checked_function(mod, 'gomodbus_AddCoils', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_AddDiscreteInputs', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_WriteRegister', retval('char*'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('int64_t', 'value')])
add_checked_function(mod, 'gomodbus_EnableDebug', None, [param('bool', 'goRun')])
add_checked_function(mod, 'gomodbus_WriteCoil', retval('char*'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('bool', 'value')])
add_checked_function(mod, 'gomodbus_NewTCPServer', retval('int64_t'), [param('char*', 'host'), param('int32_t', 'port'), param('bool', 'useTLS'), param('char*', 'certFile'), param('char*', 'keyFile'), param('char*', 'caFile')])
add_checked_function(mod, 'gomodbus_DeleteDiscreteInputs', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('int64_t', 'addresses')])
add_checked_function(mod, 'gomodbus_NewTCPClient', retval('int64_t'), [param('char*', 'host'), param('int64_t', 'port'), param('bool', 'useTLS'), param('char*', 'certFile'), param('char*', 'keyFile'), param('char*', 'caFile')])
add_checked_function(mod, 'gomodbus_WriteRegisters', retval('char*'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('uint16_t', 'quantity'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_AddInputRegisters', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_DeleteInputRegisters', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('int64_t', 'addresses')])
add_checked_function(mod, 'gomodbus_ReadCoils', retval('int64_t'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_ReadHoldingRegisters', retval('int64_t'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('uint16_t', 'quantity')])
add_checked_function(mod, 'gomodbus_WriteCoils', retval('char*'), [param('int64_t', 'c'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_AddHoldingRegisters', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('uint16_t', 'address'), param('int64_t', 'values')])
add_checked_function(mod, 'gomodbus_DeleteHoldingRegisters', retval('char*'), [param('int64_t', 'server'), param('uint8_t', 'unitID'), param('int64_t', 'addresses')])

mod.generate(open('gomodbus.c', 'w'))

